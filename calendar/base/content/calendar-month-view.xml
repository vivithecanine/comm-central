<?xml version="1.0" encoding="UTF-8"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<!-- import-globals-from calendar-views-utils.js -->

<!DOCTYPE bindings SYSTEM "chrome://global/locale/global.dtd" >

<bindings id="calendar-month-view-bindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="calendar-month-day-box-item" extends="chrome://calendar/content/calendar-view-core.xml#calendar-editable-item">
    <content mousethrough="never" tooltip="itemTooltip">
      <xul:vbox flex="1">
        <xul:hbox>
          <xul:box anonid="event-container"
                   class="calendar-color-box"
                   flex="1">
            <xul:box class="calendar-event-selection" orient="horizontal" flex="1">
              <xul:stack anonid="eventbox"
                         class="calendar-event-box-container"
                         xbl:inherits="readonly,flashing,alarm,allday,priority,progress,status,calendar,categories"
                         flex="1">
                <xul:hbox anonid="event-detail-box"
                          class="calendar-event-details">
                  <xul:vbox pack="center">
                    <xul:image anonid="item-icon"
                               class="calendar-item-image"
                               xbl:inherits="progress,allday,itemType,todoType"/>
                  </xul:vbox>
                  <xul:label anonid="item-label"
                             class="calendar-month-day-box-item-label"
                             xbl:inherits="context"/>
                  <xul:vbox align="left"
                            flex="1"
                            xbl:inherits="context">
                    <xul:label anonid="event-name"
                               crop="end"
                               flex="1"
                               style="margin: 0;"/>
                    <xul:textbox anonid="event-name-textbox"
                                 class="plain calendar-event-name-textbox"
                                 crop="end"
                                 hidden="true"
                                 wrap="true"/>
                    <xul:spacer flex="1"/>
                  </xul:vbox>
                  <xul:stack anonid="category-box-stack">
                    <xul:hbox anonid="category-box"
                              class="calendar-category-box category-color-box calendar-event-selection"
                              xbl:inherits="categories"
                              flex="1"
                              pack="end">
                      <xul:image class="calendar-category-box-gradient"/>
                    </xul:hbox>
                    <xul:hbox align="center">
                      <xul:hbox anonid="alarm-icons-box"
                                class="alarm-icons-box"
                                pack="end"
                                align="top"
                                xbl:inherits="flashing"/>
                      <xul:image anonid="item-classification-box"
                                 class="item-classification-box"
                                 pack="end"/>
                    </xul:hbox>
                  </xul:stack>
                </xul:hbox>
              </xul:stack>
            </xul:box>
          </xul:box>
        </xul:hbox>
      </xul:vbox>
    </content>
    <implementation>
      <property name="occurrence">
        <getter><![CDATA[
            return this.mOccurrence;
        ]]></getter>
        <setter><![CDATA[
            cal.ASSERT(!this.mOccurrence, "Code changes needed to set the occurrence twice", true);
            this.mOccurrence = val;
            if (cal.item.isEvent(val)) {
                if (!val.startDate.isDate) {
                    let icon = document.getAnonymousElementByAttribute(this, "anonid", "item-icon");
                    let label = document.getAnonymousElementByAttribute(this, "anonid", "item-label");
                    let formatter = Cc["@mozilla.org/calendar/datetime-formatter;1"]
                                      .getService(Ci.calIDateTimeFormatter);
                    let timezone = this.calendarView ? this.calendarView.mTimezone
                                                     : cal.dtz.defaultTimezone;
                    let parentDate = this.parentBox.date;
                    let parentTime = cal.createDateTime();
                    parentTime.resetTo(parentDate.year, parentDate.month, parentDate.day, 0, 0, 0, timezone);
                    let startTime = val.startDate.getInTimezone(timezone);
                    let endTime = val.endDate.getInTimezone(timezone);
                    let nextDay = parentTime.clone();
                    nextDay.day++;
                    let comp = endTime.compare(nextDay);
                    if (startTime.compare(parentTime) == -1) {
                        if (comp == 1) {
                            icon.setAttribute("type", "continue");
                        } else if (comp == 0) {
                            icon.setAttribute("type", "start");
                        } else {
                            icon.setAttribute("type", "end");
                            label.value = formatter.formatTime(endTime);
                        }
                    } else if (comp == 1) {
                        icon.setAttribute("type", "start");
                        label.value = formatter.formatTime(startTime);
                    } else {
                        label.value = formatter.formatTime(startTime);
                    }
                    label.setAttribute("time", "true");
                }
            }

            this.setEditableLabel();
            this.setCSSClasses();
            return val;
        ]]></setter>
      </property>
    </implementation>
  </binding>
</bindings>
