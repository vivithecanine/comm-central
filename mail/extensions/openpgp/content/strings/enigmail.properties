#####################################################################
# Strings used within enigmailCommon.js and enigmailCommon.jsm
#####################################################################

enigAlert2=OpenPGP Alert
enigConfirm2=OpenPGP Confirmation
enigInfo2=OpenPGP Information
enigError2=OpenPGP Error
enigPrompt2=OpenPGP Prompt

dlgYes=&Yes
dlgNo=&No
dlgKeepSetting=Remember my answer and do not ask me again
dlgNoPrompt=Do not show me this dialog again
dlg.button.delete=&Delete
dlg.button.cancel=&Cancel
dlg.button.close=&Close
dlg.button.continue=Con&tinue
dlg.button.skip=&Skip
dlg.button.overwrite=&Overwrite
dlg.button.view=&View
dlg.button.retry=&Retry
dlg.button.ignore=&Ignore
dlg.button.install=&Install
dlg.button.ok=&OK

repeatPrefix=\n\nThis alert will repeat %S
repeatSuffixSingular=more time.
repeatSuffixPlural=more times.
noRepeat2=\n\nThis alert will not be shown again.

noPhotoAvailable=No Photo available
debugLog2.title=OpenPGP Debug Log
error.photoPathNotReadable=Photo path '%S' is not readable

generalError=Error: %S

# Strings in configure.jsm
enigmailCommon.checkPreferences=Check Preferences ...

#####################################################################
# Strings in enigmailAbout.js
#####################################################################

usingAgent=Using %1$S executable %2$S to encrypt and decrypt

#####################################################################
# Strings in enigmailKeygen.js
#####################################################################

onlyGPG=Key generation only works with GnuPG (not with PGP)!

keygenComplete=Key generation completed! Identity <%S> will be used for signing.
revokeCertRecommended=We highly recommend to create a revocation certificate for your key. This certificate can be used to invalidate your key, e.g. in case your secret key gets lost or compromised. Do you want to create such a revocation certificate now?
keyMan.button.generateCert=&Generate Certificate
genCompleteNoSign=Key generation completed!
genGoing=Key generation already in progress!

passNoMatch=Passphrase entries do not match; please re-enter
passCheckBox=Please check box if specifying no passphrase for key
passUserName=Please specify user name for this identity
keygen.missingUserName=There is no name specified for the selected account/identity. Please enter a value in the field  "Your name" in the account settings.
keygen.passCharProblem=You are using special characters in your passphrase. Unfortunately, this can cause troubles for other applications. We recommend you choose a passphrase consisting only of any of these characters:\na-z A-Z 0-9 /.;:-,!?(){}[]%*
passSpaceProblem=Due to technical reasons, your passphrase may not start or end with a space character.
changePassFailed=Changing the passphrase failed.

keyConfirm=Generate public and secret key for '%S'?
keyMan.button.generateKey=&Generate Key
keyAbort=Abort key generation?
keyMan.button.generateKeyAbort=&Abort Key Generation
keyMan.button.generateKeyContinue=&Continue Key Generation
expiryTooLong=You cannot create a key that expires in more than 100 years.
expiryTooLongShorter=You cannot create a key that expires in more than 90 years.
expiryTooShort=Your key must be valid for at least one day.
setKeyExpirationDateFailed=The expiration date could not be changed

enigContentNote2=*Attachments to this message have not been signed nor encrypted*\r\n\r\n
possiblyPgpMime=Possibly PGP/MIME encrypted or signed message; use 'Decrypt/Verify' function to verify

saveAttachmentHeader2=Save decrypted attachment
noTempDir=Could not find a temporary directory to write to\nPlease set the TEMP environment variable
attachmentPgpKey=The attachment '%S' you are opening appears to be an OpenPGP key file.\n\nClick 'Import' to import the keys contained or 'View' to view the file contents in a browser window

beginPgpPart=********* *BEGIN ENCRYPTED or SIGNED PART* *********
endPgpPart=********** *END ENCRYPTED or SIGNED PART* **********
notePartEncrypted2=*Parts of the message have NOT been signed nor encrypted*
noteCutMessage2=*Multiple message blocks found -- decryption/verification aborted*

decryptOkNoSig=Warning\n\nDecryption was successful, but the signature could not be verified correctly
msgOvl.button.contAnyway=&Continue Anyway
signature.verifiedOK=The signature for attachment %S was successfully verified
signature.verifyFailed=The signature for attachment %S could not be verified
attachment.noMatchToSignature=Could not match attachment '%S' to a signature file
attachment.noMatchFromSignature=Could not match signature file '%S' to an attachment
fixBrokenExchangeMsg.failed=Did not succeed to repair message.
detailsDlg.importKey=Import key
wksNoIdentity=This key is not linked to any of your email accounts. Please add an account for at least one of the following email addresse(s):\n\n%S
wksConfirmSuccess=Confirmation email sent.
wksConfirmFailure=Sending the confirmation email failed.

#####################################################################
# Strings in enigmailMsgComposeOverlay.js
#####################################################################

keysToExport=Select OpenPGP Keys to Insert
keysToUse=Select OpenPGP Key(s) to use for %S
pubKey=Public key for %S\n

windowLocked=Compose window is locked; send cancelled
composeSpecifyEmail=Please specify your primary email address, which will be used to choose the signing key for outgoing messages.\n If you leave it blank, the FROM address of the message will be used to choose the signing key.
sendingHiddenRcpt=This message has BCC (blind copy) recipients. If this message is encrypted, it is possible to hide the BCC recipients but users of some products (e.g. PGP Corp.) will not be able to decrypt the message. Given this, we recommend to avoid BCC-emails with encrypted messages.
sendWithHiddenBcc=Hide BCC recipients
sendWithShownBcc=Encrypt normally
sendingNews=Encrypted send operation aborted.\n\nThis message cannot be encrypted because there are newsgroup recipients. Please re-send the message without encryption.
sendToNewsWarning=Warning: you are about to send an encrypted email to a newsgroup.\n\nThis is discouraged because it only makes sense if all members of the group can decrypt the message, i.e. the message needs to be encrypted with the keys of all group participants. Please send this message only if you know exactly what you are doing.\n\nContinue?
hasHTML=HTML email warning:\nThis message may contain HTML, which could cause signing/encryption to fail. To avoid this in the future, you should press the SHIFT key when clicking on the Compose/Reply button to send signed email.\nIf you sign email by default, you should uncheck the 'Compose Messages in HTML' preference box to permanently disable HTML email for this email account.
strippingHTML=Message contains HTML formatting information that will be lost when converting to plain text for signing/encryption. Do you wish to proceed?
msgCompose.button.sendAnyway=&Send Message Anyway
attachWarning=Attachments to this message are not local, they cannot be encrypted. In order to encrypt the attachments, store them as local files first and attach these files. Do you wish to send the message anyway?
quotedPrintableWarn=You have enabled 'quoted-printable' encoding for sending messages. This may result in incorrect decryption and/or verification of your message.\nDo you wish to turn off sending 'quoted-printable' messages now?
minimalLineWrapping=You have set line wrapping to %S characters. For correct encryption and/or signing, this value needs to be at least 68.\nDo you wish to change line wrapping to 68 characters now?
warning=Warning
signIconClicked=You have manually modified signing. Therefore, while you are composing this message, (de)activating signing does not depend anymore on (de)activating encryption.
errorOwnKeyUnusable=The key ID '%S' configured for the current identity does not yield a usable OpenPGP key.\n\nPlease ensure that you have a valid, not expired OpenPGP key and that your account settings point to that key.\nIf your key is not expired, then check if you did set Owner trust to "full" or "ultimate".
msgCompose.cannotSaveDraft=Error while saving draft
msgCompose.partiallyEncrypted.short=Beware of leaking sensitive information - partially encrypted email.
msgCompose.partiallyEncrypted.inlinePGP=The message you are replying to contained both unencrypted and encrypted parts. If the sender was not able to decrypt some message parts originally, you may be leaking confidential information that the sender was not able to originally decrypt themselves.\n\nPlease consider removing all quoted text from your reply to this sender.

msgCompose.internalEncryptionError=Internal Error: promised encryption disabled
msgCompose.internalError=An internal error has occurred.

msgCompose.protectSubject.tooltip=Protect the message subject
msgCompose.noSubjectProtection.tooltip=Do not protect the message subject
msgCompose.protectSubject.dialogTitle=Enable Protection of Subject?
msgCompose.protectSubject.question=Regular encrypted emails contain the unredacted subject.\n\nWe have established a standard to hide the original subject in the encrypted message\nand replace it with a dummy text, such that the subject is only visible after the email is decrypted.\n\nDo you want to protect the subject in encrypted messages?
msgCompose.protectSubject.yesButton=&Protect subject
msgCompose.protectSubject.noButton=&Leave subject unprotected

msgCompose.detailsButton.label=Details ...
msgCompose.detailsButton.accessKey=D

# note: should end with double newline:
sendAborted=Send operation aborted.\n\n

# details:
keyNotTrusted=Not enough trust for key '%S'
keyNotFound=Key '%S' not found
keyRevoked=Key '%S' revoked
keyExpired=Key '%S' expired

statPGPMIME=PGP/MIME
statSMIME=S/MIME
statSigned=SIGNED
statEncrypted=ENCRYPTED
statPlain=UNSIGNED and UNENCRYPTED

offlineSave=Save %1$S message to %2$S in Unsent Messages folder?

onlineSend=Send %1$S message to %2$S?
encryptKeysNote=Note: The message is encrypted for the following User IDs / Keys: %S
hiddenKey=<hidden key>

msgCompose.button.sendUnencrypted=&Send Unencrypted Message
recipientsSelectionHdr=Select Recipients for Encryption

# encryption/signing status and associated reasons:
encryptMessageAuto=Encrypt Message (auto)
encryptMessageNorm=Encrypt Message
signMessageAuto=Sign Message (auto)
signMessageNorm=Sign Message

encryptOff=Encryption: OFF
encryptOnWithReason=Encryption: ON (%S)
encryptOffWithReason=Encryption: OFF (%S)
encryptOn=Encryption: ON
signOn=Signing: ON
signOff=Signing: OFF
signOnWithReason=Signing: ON (%S)
signOffWithReason=Signing: OFF (%S)
reasonEnabledByDefault=enabled by default
reasonManuallyForced=manually forced
reasonByRecipientRules=forced by per-recipient rules
reasonByAutoEncryption=forced by auto encryption
reasonByConflict=due to conflict in per-recipient rules
reasonByEncryptionMode=due to encryption mode

# should not be used anymore:
encryptYes=Message will be encrypted
encryptNo=Message will not be encrypted

# should not be used anymore:
signYes=Message will be signed
signNo=Message will not be signed


# PGP/MIME status:
pgpmimeNormal=Protocol: PGP/MIME
inlinePGPNormal=Protocol: Inline PGP
smimeNormal=Protocol: S/MIME
pgpmimeAuto=Protocol: PGP/MIME (auto)
inlinePGPAuto=Protocol: Inline PGP (auto)
smimeAuto=Protocol: S/MIME (auto)

# should not be used anymore
pgpmimeYes=PGP/MIME will be used
pgpmimeNo=Inline PGP will be used

# Attach own key status (tooltip strings):
attachOwnKeyNo=Your own public key will not be attached
attachOwnKeyYes=Your own public key will be attached
attachOwnKeyDisabled=Your own public key cannot be attached. You have to select a specific key\nin the OpenPGP section of the Account Settings to enable this feature.

rulesConflict=Conflicting per-recipient rules detected\n%S\n\nSend message with these settings?
msgCompose.button.configure=&Configure
msgCompose.button.send=&Send Message
msgCompose.button.save=&Save Message

# Strings in enigmailMsgHdrViewOverlay.js
signatureFrom=Signature from public key %S
clickDecrypt=; use 'Decrypt/Verify' function
clickDecryptRetry=; use 'Decrypt/Verify' function to retry
clickDetailsButton=; click on 'Details' button for more information
clickImportButton=; click on the 'Import Key' button to import the key
keyTypeUnsupported=; the key type is not supported by your version of GnuPG
decryptManually=; click on the 'Decrypt' button to decrypt the message
verifyManually=; click on the 'Verify' button to verify the signature
headerView.button.verify=Verify
headerView.button.decrypt=Decrypt
msgPart=Part of the message %S
msgSigned=signed
msgSignedUnkownKey=signed with unknown key
msgEncrypted=encrypted
msgSignedAndEnc=signed and encrypted

goodSig=Good signature
uncertainSig=Uncertain signature
badSig=Bad signature
incompleteDecrypt=Decryption incomplete
needKey=Error - no matching secret key found to decrypt message
failedDecrypt=Error - decryption failed
badPhrase=Error - bad passphrase
missingMdcError=Error - missing or broken integrity protection (MDC)
failedDecryptVerify=Error - decryption/verification failed
viewInfo=; View > Message security info for details
brokenExchangeMessage=Broken PGP/MIME message from MS-Exchange.

decryptedMsg=Decrypted message
decryptedMsgWithFormatError=Decrypted message (restored broken PGP email format probably caused by an old Exchange server, so that the result might not be perfect to read)

usedAlgorithms=Used Algorithms: %1$S and %2$S

wksConfirmationReq=Web Key Directory Confirmation Request
wksConfirmationReq.message=This message has been sent by your email provider to confirm deployment of your OpenPGP public key\nin their Web Key Directory.\nProviding your public key helps others to discover your key and thus being able to encrypt messages to you.\n\nIf you want to deploy your key in the Web Key Directory now, please click on the button "Confirm Request" in the status bar.\nOtherwise, simply ignore this message.
wksConfirmationReq.button.label=Confirm Request

autocryptSetupReq.setupMsg.desc=This message contains all information to transfer your Autocrypt settings along with your secret key securely from your original device.
autocryptSetupReq.setupMsg.backup=You can keep this message and use it as a backup for your secret key. If you want to do this, you should write down the password and store it securely.
autocryptSetupReq.message.sent=Please click on the message on your new device and follow the instuctions to import the settings.

# strings in pref-enigmail.js
locateGpg=Locate GnuPG program
warningsAreReset=All warnings have been reset.
prefs.gpgFound=GnuPG was found in %S
prefs.gpgNotFound=Could not find GnuPG
prefEnigmail.oneKeyserverOnly=Error - you can only specify one keyserver for automatic downloading of missing OpenPGP keys.
acSetupMessage.desc=Transfer your key to another Autocrypt-enabled device. (<html:span class='enigmailLink' href='https://autocrypt.org'>What is Autocrypt</html:span>)

# Strings used in core.jsm
# (said file also re-uses some strings from above)

enterAdminPin=Please type in the ADMIN PIN of your SmartCard
enterCardPin=Please type your SmartCard PIN

badCommand=Error - encryption command failed
cmdLine=command line and output:
notRequired=Error - no encryption required
notComplete=Error - key generation not yet completed
invalidEmail=Error - invalid email address(es)
noPassphrase=Error - no passphrase supplied
noPGPblock=Error - No valid armored OpenPGP data block found
unverifiedReply=Indented message part (reply) was probably modified
keyInMessageBody=A key was found in the message body. Click 'Import Key' to import the key
sigMismatch=Error - Signature mismatch
cantImport=Error importing public key\n\n
doImportOne=Import %1$S (%2$S)?
doImportMultiple=Import the following keys?\n\n%S
previewFailed=Can't read public key file.
passphrasePrompt=Please enter the passphrase that unlocks the following key: %S

# Strings used in errorHandling.jsm
sc.wrongCardAvailable=The SmartCard %1$S found in your reader cannot be used to process the message.\nPlease insert your SmartCard %2$S and repeat the operation.
sc.insertCard=The operation requires your SmartCard %S.\nPlease insert the required SmartCard and repeat the operation.
sc.removeCard=The operation requires no SmartCard to be in the reader.\nPlease remove your SmartCard and repeat the operation.
sc.noCardAvailable=No SmartCard could be found in your reader\nPlease insert your SmartCard and repeat the operation.
sc.noReaderAvailable=Your SmartCard reader could not be accessed\nPlease attach your SmartCard reader, insert your card, and repeat the operation.
keyError.keySpecNotFound=The email address '%S' cannot be matched to a key on your keyring.
keyError.keyIdNotFound=The configured key ID '%S' cannot be found on your keyring.
keyError.resolutionAction=Please select a valid key in the OpenPGP section of your Account Settings.
missingPassphrase=Missing passphrase
errorHandling.gpgAgentInvalid=Your system is running a version of gpg-agent that is not suitable for your GnuPG version.
errorHandling.gpgAgentError=GnuPG reported an error in the communication with gpg-agent (a component of GnuPG).
errorHandling.pinentryError=GnuPG cannot query your passphrase via pinentry.

prefGood=Good signature from %S
prefBad=BAD signature from %S

failCancel=Error - Key receive cancelled by user
failKeyExtract=Error - key extraction command failed
failKeyNoSubkey=No valid (sub-)key
notFirstBlock=Error - First OpenPGP block not public key block
importKeyConfirm=Import public key(s) embedded in message?
failKeyImport=Error - key importing failed
fileWriteFailed=Failed to write to file %S

importKey=Import public key %S from keyserver:
uploadKey=Send public key %S to keyserver:
keyId=Key ID
keyAndSigDate=Key ID: 0x%1$S / Signed on: %2$S
keyFpr=Key fingerprint: %S
noEmailProvided=You did not provide an email address!
keyAlreadySigned=The key is already signed, you cannot sign it twice.

# Strings used in enigmailAttachmentDialog.js
pgpMimeNote=NOTE: PGP/MIME is not supported by all email clients. If you are unsure, select the %S option.
first=first
second=second

# Strings used in enigmailSingleRcptSettings.js
noEncryption=You have activated encryption, but you did not select a key. In order to encrypt emails sent to %1$S, you need to specify one or several valid key(s) from your key list. Do you want to disable encryption for %2$S?
noKeyToUse=(none - no encryption)
noEmptyRule=The Rule may not be empty! Please set an email address in the Rule field.
invalidAddress=The email address(es) you have entered are not valid. You should not set the names of the recipients, just the email addresses. E.g.:\nInvalid: Some Name <some.name@address.net>\nValid:   some.name@address.net
noCurlyBrackets=The curly brackets {} have a special meaning and should not be used in an email address. If you want to modify the matching behavior for this rule, use the 'Apply rule if recipient ...' option.\nMore information is available from the Help button.

# Strings used in enigmailRulesEditor.js
never=Never
always=Always
possible=Possible
deleteRule=Really delete the selected rule?
nextRcpt=(Next recipient)
negateRule=Not
addKeyToRule=Add key %1$S (%2$S) to per-recipient rule

# Strings used in enigmailSearchKey.js
needOnline=The function you have selected is not available in offline mode. Please go online and try again.
noKeyserverConn=Could not connect to keyserver at %S.
internalError=An internal error occurred. The keys could not be downloaded or imported.
noKeyFound=We could not find any key matching the specified search criteria.
keyDownload.keyUnavailable=The key with ID %S is not available on the keyserver. Most likely, the owner of the key did not upload their key to the keyserver.\n\nPlease ask the sender of the message to send you their public key by email.

# Strings in enigmailEditKeyTrustDlg.xhtml
setKeyTrustFailed=Setting owner trust failed


# Strings in enigmailSignKeyDlg.js
signKeyFailed=Key signing failed
alreadySigned.label=Note: the key %S is already signed with the selected secret key.
alreadySignedexportable.label=Note: the key %S is already signed exportable with the selected secret key. A local signature does not make sense.
partlySigned.label=Note: some user IDs of key %S are already signed with the selected secret key.
noTrustedOwnKeys=No eligible key found for signing! You need at least one fully trusted secret key in order to sign keys.

# Strings in enigmailKeyManager.js
keyMan.loadingKeys=Loading keys, please wait ...
keyValid.unknown=unknown
keyValid.invalid=invalid
keyValid.disabled=disabled
keyValid.revoked=revoked
keyValid.expired=expired
keyValid.noSubkey=no valid subkey

keyTrust.untrusted=untrusted
keyTrust.marginal=marginal
keyTrust.full=trusted
keyTrust.ultimate=ultimate
keyTrust.group=(group)
keyType.public=pub
keyType.publicAndSec=pub/sec
userAtt.photo=User attribute (JPEG image)

asciiArmorFile=ASCII Armored Files (*.asc)
importKeyFile=Import OpenPGP Key File
gnupgFile=GnuPG Files
saveRevokeCertAs=Create & Save Revocation Certificate
revokeCertOK=The revocation certificate has been successfully created. You can use it to invalidate your public key, e.g. in case you would lose your secret key.
revokeCertFailed=The revocation certificate could not be created.

addUidOK=User ID added successfully
addUidFailed=Adding the User ID failed
noKeySelected=You should select at least one key in order to perform the selected operation
exportToFile=Export Public Key To File
exportKeypairToFile=Export Secret and Public Key To File
exportSecretKey=Do you want to include the secret key in the saved OpenPGP key file?
saveKeysOK=The keys were successfully saved
saveKeysFailed=Saving the keys failed
importKeysFailed=Importing the keys failed
specificPubKeyFilename=%1$S (0x%2$S) pub
specificPubSecKeyFilename=%1$S (0x%2$S) pub-sec
defaultPubKeyFilename=Exported-public-keys
defaultPubSecKeyFilename=Exported-public-and-secret-keys

sendKeysOk=Key(s) sent successfully
sendKeysFailed=Sending of keys failed
receiveKeysOk=Key(s) updated successfully
receiveKeysFailed=Downloading of keys failed
keyUpload.verifyEmails=The keyserver will send you an email for each email address of your uploaded key. To confirm publication of your key, you'll need to click on the link in each of the emails you'll receive.

importFromClip=Do you want to import some key(s) from clipboard?
importFromUrl=Download public key from this URL:
copyToClipbrdFailed=Could not copy the selected key(s) to the clipboard.
copyToClipbrdOK=Key(s) copied to clipboard

deleteSecretKey=WARNING: You are about to delete a secret key!\nIf you delete your secret key, you will no longer be able to decrypt any messages encrypted for that key, nor will you be able to revoke it.\n\nDo you really want to delete BOTH, the secret key and the public key\n'%S'?
deleteMix=WARNING: You are about to delete secret keys!\nIf you delete your secret key, you will no longer be able to decrypt any messages encrypted for that key.\n\nDo you really want to delete BOTH, the selected secret and public keys?
deletePubKey=Do you want to delete the public key\n'%S'?
deleteSelectedPubKey=Do you want to delete the public keys?
deleteKeyFailed=The key could not be deleted.
revokeKeyQuestion=You are about to revoke the key '%S'.\n\nYou will no longer be able to sign with this key, and once distributed, others will no longer be able to encrypt with that key. You can still use the key to decrypt old messages.\n\nDo you want to proceed?
revokeKeyOk=The key has been revoked. If your key is available on a key server, it is recommended to re-upload it, so that others can see the revocation.
revokeKeyFailed=The key could not be revoked.
revokeKeyNotPresent=You have no key (0x%S) which matches this revocation certificate!\n\nIf you have lost your key, you must import it (e.g. from a keyserver) before importing the revocation certificate!
revokeKeyAlreadyRevoked=The key 0x%S has already been revoked.
refreshAllQuestion=You did not select any key. Would you like to refresh ALL keys?
refreshKeyServiceOn.warn=Warning: Your keys are currently being refreshed in the background as safely as possible.\nRefreshing all your keys at once will unnecessarily reveal information about you.\nDo you really want to do this?
refreshKey.warn=Warning: depending on the number of keys and the connection speed, refreshing all keys could be quite a lengthy process!
downloadContactsKeys.importFrom=Import contacts from address book '%S'?
keyMan.button.exportSecKey=Export &Secret Keys
keyMan.button.exportPubKey=Export &Public Keys Only
keyMan.button.import=&Import
keyMan.button.refreshAll=&Refresh All Keys
keyMan.button.revokeKey=&Revoke Key

keylist.noOtherUids=Has no other identities
keylist.hasOtherUids=Also known as
keylist.noPhotos=No photo available
keylist.hasPhotos=Photos

keyMan.addphoto.filepicker.title=Select photo to add
keyMan.addphoto.warnLargeFile=The file you have chosen is larger than 25 kB.\nIt is not recommended to add very large files as it causes very large keys.
keyMan.addphoto.noJpegFile=The selected file does not appear to be a JPEG file. Please choose a different file.
keyMan.addphoto.failed=The photo could not be added.
noWksIdentity=The key %S does not have a WKS identity.
wksUpload.noKeySupported=The upload was not successful - your provider does not seem to support WKS.


# Strings in enigmailManageUidDlg.xhtml
changePrimUidFailed=Changing the primary User ID failed
changePrimUidOK=The primary user ID was changed successfully
revokeUidFailed=Revoking the user ID %S failed
revokeUidOK=User ID %S was revoked successfully. If your key is available on a key server, it is recommended to re-upload it, so that others can see the revocation.
revokeUidQuestion=Do you really want to revoke the user ID %S?

# Strings in enigmailKeyImportInfo.xhtml
importInfoTitle=SUCCESS! Keys imported
importInfoBits=Bits
importInfoCreated=Created
importInfoFpr=Fingerprint
importInfoDetails2=View Details and manage key acceptance
importInfoNoKeys=No keys imported.

# Strings in enigmailKeyDetailsDlg.xhtml
keyTypePublic=public key
keyTypePrimary=primary key
keyTypeSubkey=subkey
keyTypePair2=personal key (secret key and public key)
keyExpiryNever=never
keyAlgorithm_1=RSA
keyAlgorithm_2=RSA
keyAlgorithm_3=RSA
keyAlgorithm_16=ELG
keyAlgorithm_17=DSA
keyAlgorithm_18=ECDH
keyAlgorithm_19=ECDSA
keyAlgorithm_20=ELG
keyAlgorithm_22=EDDSA
keyUsageEncrypt=Encrypt
keyUsageSign=Sign
keyUsageCertify=Certify
keyUsageAuthentication=Authentication
keyDoesNotExpire=Key does not expire
keyExpired=Key expired on %S
keyRevoked=Key was revoked
keyAutoAcceptPersonal=You accept this key for all uses, because it is one of your personal keys. (You have the secret key.)
keyDoYouAccept=Do you accept this key for verifying digital signatures and for encrypting messages?
KeyAcceptWarning=Avoid accepting a rogue key. Use a communication channel other than email to verify the fingerprint of your correspondent's key.

# Strings in enigmailGenCardKey.xhtml
keygen.started=Please wait while the key is being generated ....
keygen.completed=Key Generated. The new Key ID is: 0x%S
keygen.keyBackup=The key is backed up as %S
keygen.passRequired=Please specify a passphrase if you want to create a backup copy of your key outside your SmartCard.

# Strings in enigmailSetCardPin.xhtml
cardPin.processFailed=Failed to change PIN

# Strings in enigRetrieveProgres.js
keyserverProgress.refreshing=Refreshing keys, please wait ...
keyserverProgress.uploading=Uploading keys, please wait ...
keyserverProgress.wksUploadFailed=Could not upload your key to the Web Key Service
keyserverProgress.wksUploadCompleted=Your public key was successfully submitted to your provider. You will receive an email to confirm that you initiated the upload.
keyserverTitle.refreshing=Refresh Keys
keyserverTitle.uploading=Key Upload
keyserver.result.download.none=No key downloaded.
keyserver.result.download.1of1=Key successfully downloaded.
keyserver.result.download.1ofN=Successfully downloaded 1 of %S keys.
keyserver.result.download.NofN=Successfully downloaded %1$S of %2$S keys.
keyserver.result.uploadOne=Successfully uploaded 1 key.
keyserver.result.uploadMany=Successfully uploaded %S keys.

# Strings in installGnuPG.jsm
installGnuPG.downloadFailed=An error occurred while trying to download GnuPG. Please check the console log for further details.
installGnuPG.installFailed=An error occurred while installing GnuPG. Please check the console log for further details.

# Strings in enigmailAddUidDlg.xhtml
addUidDlg.nameOrEmailError=You have to fill in a name and an email address
addUidDlg.nameMinLengthError=The name must at least have 5 characters
addUidDlg.invalidEmailError=You must specify a valid email address

# Strings in enigmailCardDetails.js
Carddetails.NoASCII=OpenPGP Smartcards only support ASCII characters in Firstname/Name.


# network error types
errorType.SecurityCertificate=The security certificate presented by the web service is not valid.
errorType.SecurityProtocol=The security protocol used by the web service is unknown.
errorType.Network=A network error has occurred.

# filter stuff
filter.folderRequired=You must select a target folder.
filter.decryptMove2.label=Decrypt permanently (OpenPGP)
filter.decryptCopy2.label=Create decrypted Copy (OpenPGP)
filter.decryptMove.warnExperimental=Warning - the filter action "Decrypt permanently" may lead to destroyed messages.\n\nWe strongly recommend that you first try the "Create decrypted Copy" filter, test the result carefully, and only start using this filter once you are satisified with the result.
filter.term.pgpencrypted.label=OpenPGP Encrypted
filter.encrypt2.label=Encrypt to key (OpenPGP)
filter.keyRequired=You must select a recipient key.
filter.keyNotFound=Could not find an encryption key for '%S'.
filter.warn.keyNotSecret=Warning - the filter action "Encrypt to key" replaces the recipients.\n\nIf you do not have the secret key for '%S' you will no longer be able to read the emails.

# strings in enigmailConvert.jsm
converter.decryptBody.failed=Could not decrypt message with subject\n'%S'.\nDo you want to retry with a different passphrase or do you want to skip the message?
converter.decryptAtt.failed=Could not decrypt attachment '%1$S'\nof message with subject\n'%2$S'.\nDo you want to retry with a different passphrase or do you want to skip the message?

saveLogFile.title=Save Log File

# strings in gpg.jsm
unknownSigningAlg=Unknown signing algorithm (ID: %S)
unknownHashAlg=Unknown cryptographic hash (ID: %S)

# strings in keyRing.jsm
keyring.photo=Photo
keyRing.pubKeyRevoked=The key %1$S (key ID %2$S) is revoked.
keyRing.pubKeyExpired=The key %1$S (key ID %2$S) has expired.
keyRing.pubKeyNotForSigning=The key %1$S (key ID %2$S) cannot be used for signing.
keyRing.pubKeyNotForEncryption=The key %1$S (key ID %2$S) cannot be used for encryption.
keyRing.keyDisabled=The key %1$S (key ID %2$S) is disabled; it cannot be used.
keyRing.keyNotTrusted=The key %1$S (key ID %2$S) is not trusted enough. Please set the trust level of your key to "ultimate" to use it for signing.
keyRing.keyInvalid2=The key %1$S (key ID %2$S) is not valid. Please consider verifying it correctly.
keyRing.signSubKeysRevoked=All signing-subkeys of key %1$S (key ID %2$S) are revoked.
keyRing.signSubKeysExpired=All signing-subkeys of key %1$S (key ID %2$S) have expired.
keyRing.signSubKeysUnusable=All signing-subkeys of key %1$S (key ID %2$S) are revoked, expired or otherwise unusable.
keyRing.encSubKeysRevoked=All encryption subkeys of key %1$S (key ID %2$S) are revoked.
keyRing.encSubKeysExpired=All encryption subkeys of key %1$S (key ID %2$S) have expired.
keyRing.noSecretKey=You do not seem to have the secret key for %1$S (key ID %2$S) on your keyring; you cannot use the key for signing.
keyRing.encSubKeysUnusable=All encryption subkeys of key %1$S (key ID %2$S) are revoked, expired or otherwise unusable.


#strings in exportSettingsWizard.js
cannotWriteToFile=Cannot save to file '%S'. Please select a different file.
dataExportError=An error occurred during exporting your data.
specifyExportFile=Specify file name for exporting
homedirParamNotSUpported=Additional parameters that configure paths such as --homedir and --keyring are not supported for exporting/restoring your settings. Please use alternative methods such as setting the environment variable GNUPGHOME.

#strings in expiry.jsm
expiry.keyExpiresSoon=Your key %1$S will expire in less than %2$S days.\n\nWe recommend that you create a new key pair and configure the corresponding accounts to use it.
expiry.keysExpireSoon=Your following keys will expire in less than %1$S days:\n%2$S. We recommend that you create new keys and configure the corresponding accounts to use them.
expiry.keyMissingOwnerTrust=Your secret key %S has missing trust.\n\nWe recommend that you set "You rely on certifications" to "ultimate" in key properties.
expiry.keysMissingOwnerTrust=The following of your secret keys have missing trust.\n%S.\nWe recommend that you set "You rely on certifications" to "ultimate" in key properties.
expiry.OpenKeyManager2=Open OpenPGP Key Management
expiry.OpenKeyProperties=Open Key Properties

#strings in gpgAgent.jsm
gpghomedir.notexists=The directory '%S' containing your OpenPGP keys does not exist and cannot be created.
gpghomedir.notwritable=The directory '%S' containing your OpenPGP keys is not writable.
gpghomedir.notdirectory=The directory '%S' containing your OpenPGP keys is a file instead of a directory.
gpghomedir.notusable=Please fix the directory permissions or change the location of your GnuPG "home" directory. GnuPG cannot work correctly otherwise.

#strings in mimeWkdHandler.jsm
wkdMessage.body.req2=Your email provider processed your request to upload your public key to the OpenPGP Web Key Directory.\n\nPlease confirm to complete the publishing of your public key.
wkdMessage.body.process=This is an email related to the automatic processing to upload your public key to the OpenPGP Web Key Directory.\n\nYou do not need to take any manual action at this point.

handshakeDlg.button.initHandshake=Handshake...
handshakeDlg.button.stopTrust=Stop Trusting
handshakeDlg.button.reTrust=Stop Mistrusting
handshakeDlg.label.outgoingMessage=Outgoing message
handshakeDlg.label.incomingMessage=Incoming message
handshakeDlg.error.noPeers=Cannot handshake without any correspondents.
handshakeDlg.error.noProtection=Please enable protection in order to use the "Handshake" function.

enigmail.acSetupPasswd.descEnterPasswd=Please enter the setup code that is displayed on the other device.
  enigmail.acSetupPasswd.descCopyPasswd=Please enter the setup code below on your other device to proceed with the setup.

#strings in autocrypt.jsm

autocrypt.setupMsg.subject=Autocrypt Setup Message
autocrypt.setupMsg.msgBody=To set up your new device for Autocrypt, please follow the instuctions that should be presented by your new device.
autocrypt.setupMsg.fileTxt=This is the Autocrypt setup file used to transfer settings and keys between clients. You can decrypt it using the setup code displayed on your old device, then import the key to your keyring.

#strings in keyserver.jsm
keyserver.error.aborted=Aborted
keyserver.error.unknown=An unknown error occurred
keyserver.error.serverError=The keyserver reported an error.
keyserver.error.importError=Failed to import the downloaded key.
keyserver.error.unavailable=The keyserver is not available.
keyserver.error.securityError=The keyserver does not support encrypted access.
keyserver.error.certificateError=The keyserver’s certificate is not valid.
keyserver.error.unsupported2=The keyserver is not supported.

#strings in mimeDecrypt.jsm
mimeDecrypt.encryptedPart.attachmentLabel=Encrypted message part
mimeDecrypt.encryptedPart.concealedData=This is an encrypted message part. You need to open it in a separate window by clicking on the attachment.

#strings in gnupg-key.jsm
import.secretKeyImportError=An error has occurred in GnuPG while importing secret keys. The import was not successful.

#strings in importSettings.js
importSettings.errorNoFile=The file you specified is not a regular file!
importSettings.cancelWhileInProgress=Restoring is in progress. Do you really want to abort the process?
importSettings.button.abortImport=&Abort process

cannotUseOwnKeyBecause=Unable to send the message, because there is a problem with your personal key. %S
cannotEncryptBecauseMissing=Unable to send this message with end-to-end encryption, because there are problems with the keys of the following recipients: %S




fileToBigToImport=This file is too big. Please don't import a large set of keys at once.
