/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, you can obtain one at http://mozilla.org/MPL/2.0/. */

@media not (prefers-contrast) {
  :root {
    --thread-pane-flag-fill: var(--color-orange-30);
    --thread-pane-flag-stroke: var(--color-orange-60);
    --thread-pane-unread-fill: var(--color-green-60);
    --thread-pane-unread-stroke: var(--color-green-60);
    --thread-pane-spam-fill: var(--color-red-50);
    --thread-pane-spam-stroke: var(--color-red-70);
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --thread-pane-flag-fill: var(--color-orange-40);
      --thread-pane-flag-stroke: var(--color-orange-50);
      --thread-pane-unread-fill: var(--color-green-50);
      --thread-pane-unread-stroke: var(--color-green-50);
      --thread-pane-spam-fill: var(--color-red-40);
      --thread-pane-spam-stroke: var(--color-red-50);
    }
  }
}

#threadPane > tree-view {
  -moz-context-properties: fill;
  fill: currentColor;
  background-color: var(--sidebar-background-color, inherit);
  color: var(--sidebar-text-color, inherit);
}

#threadTree [data-properties~="unread"] {
  font-weight: bold;
}

#threadTree .children.collapsed[data-properties~="hasUnread"][data-properties~="read"]
  :where(td, .subject-line) {
  text-decoration: underline;
}

#messageThreadTree thead[is="tree-view-table-header"] th::before {
  display: none;
}

#threadTree button {
  border: none;
}

/* Thread column */

.tree-view-header-thread img {
  content: var(--icon-thread-sm);
  pointer-events: none;
}

.tree-view-row-thread img {
  content: var(--icon-thread-sm);
  color: inherit;
  /* Don't center align this because it could be the last column, spanning for
     2 columns to account for the picker, therefore a center alignment would be
     wrong. */
  margin-inline-start: 3px;
  opacity: 0.7;
}

tr:not(.children) .tree-view-row-thread img {
  display: none;
}

/* Starred column */

#flaggedColButton img {
  content: var(--icon-star-sm);
}

.tree-view-row-flag button {
  color: inherit;
  opacity: 0.8;
}

.tree-view-row-flag img {
  content: var(--icon-star);
  pointer-events: none;
  fill: color-mix(in srgb, currentColor 10%, transparent);
  stroke: color-mix(in srgb, currentColor 30%, transparent);
}

tr[data-properties~="flagged"] .tree-view-row-flag img {
  fill: var(--thread-pane-flag-fill);
  stroke: var(--thread-pane-flag-stroke);
}

.tree-view-row-flag button:hover {
  opacity: 1;
  background-color: transparent;
  border-color: transparent;
}

.tree-view-row-flag button:hover:active {
  background-color: color-mix(in srgb, currentColor 20%, transparent);
  border-color: transparent;
  color: currentColor;
}

[is="tree-view-listbox"]:focus .selected .tree-view-row-flag button:hover {
  background-color: transparent;
  color: currentColor;
}

/* Attachment column variations */

#attachmentColButton img {
  content: var(--icon-attachment-sm);
}

.attachmentcol-column img {
  content: var(--icon-attachment-sm);
  color: inherit;
  /* Don't center align this because it could be the last column, spanning for
     2 columns to account for the picker, therefore a center alignment would be
     wrong. */
  margin-inline-start: 3px;
  margin-top: 1px;
  opacity: 0.7;
}

tr:not([data-properties~="attach"]) .attachmentcol-column img {
  display: none;
}

/* Unread column variations */

#unreadButtonColHeader img {
  content: var(--icon-unread-sm);
}

.tree-view-row-unread button {
  color: inherit;
  opacity: 0.8;
}

.tree-view-row-unread img {
  content: var(--icon-unread-dot);
  pointer-events: none;
  fill: color-mix(in srgb, currentColor 10%, transparent);
  stroke: color-mix(in srgb, currentColor 30%, transparent);
}

tr[data-properties~="unread"] .tree-view-row-unread img {
  fill: color-mix(in srgb, var(--thread-pane-unread-fill) 50%, transparent);
  stroke: var(--thread-pane-unread-stroke);
}

tr[data-properties~="unread"].selected .tree-view-row-unread button {
  opacity: 1;
}

.tree-view-row-unread button:hover {
  opacity: 1;
  background-color: transparent;
  border-color: transparent;
}

.tree-view-row-unread button:hover:active {
  background-color: color-mix(in srgb, currentColor 20%, transparent);
  border-color: transparent;
  color: currentColor;
}

[is="tree-view-listbox"]:focus .selected .tree-view-row-unread button:hover {
  background-color: transparent;
  color: currentColor;
}

/* Subject column variations */

#subjectColButton {
  /* TODO: make this density aware. */
  padding-inline-start: 44px;
}

tr[is="thread-listrow"] td > .thread-container {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  gap: 6px;
  max-height: inherit;
  box-sizing: border-box;
}

tr[is="thread-listrow"] .subject-line {
  text-overflow: ellipsis;
  overflow-y: visible;
  white-space: nowrap;
  overflow-x: hidden;
  /* Line height px exception to avoid vertical cut off of characters. This
     should follow and match the density variation height of the row. */
  line-height: 22px;
  margin-inline-start: calc(16px * var(--thread-level));
}

tr[is="thread-listrow"]:not(.children) .subject-line {
  padding-inline-start: 22px;
}

tr[is="thread-listrow"] .subject-line img {
  visibility: hidden;
  width: 16px;
  height: 16px;
  vertical-align: sub;
  margin-inline-end: 6px;
}

/* Icons variations for message state in subject column */

tr[data-properties~="new"] .subject-line img {
  visibility: initial;
  content: var(--icon-notify);
  fill: var(--color-yellow-40) !important; /* override the selected, focus rule */
  stroke: var(--color-orange-50) !important; /* override the selected, focus rule */
}

tr[data-properties~="replied"] .subject-line img {
  visibility: initial;
  content: var(--icon-reply-col);
  fill: var(--color-purple-50);
}

tr[data-properties~="redirected"] .subject-line img {
  visibility: initial;
  content: var(--icon-redirect-col);
  fill: var(--color-orange-50);
}

tr[data-properties~="forwarded"] .subject-line img {
  visibility: initial;
  content: var(--icon-forward-col);
  fill: var(--color-blue-50);
}

tr[data-properties~="replied"][data-properties~="forwarded"] .subject-line img {
  visibility: initial;
  content: var(--icon-reply-forward-col);
  fill: var(--color-blue-50);
  stroke: var(--color-purple-50);
}

tr[data-properties~="replied"][data-properties~="redirected"] .subject-line img {
  visibility: initial;
  content: var(--icon-reply-redirect-col);
  fill: var(--color-orange-50);
  stroke: var(--color-purple-50);
}

tr[data-properties~="forwarded"][data-properties~="redirected"] .subject-line img {
  visibility: initial;
  content: var(--icon-forward-redirect-col);
  fill: var(--color-blue-50);
  stroke: var(--color-orange-50);
}

tr[data-properties~="replied"][data-properties~="forwarded"][data-properties~="redirected"] .subject-line img {
  visibility: initial;
  content: var(--icon-reply-forward-redirect-col);
  fill: var(--color-blue-50);
  stroke: var(--color-purple-50);
}

[is="tree-view-listbox"]:focus > .selected .subject-line img {
  fill: currentColor !important;
  stroke: currentColor !important;
}

tr[is="thread-listrow"] .twisty {
  width: 16px;
  height: 16px;
  flex-shrink: 0;
  color: currentColor;
}

tr[is="thread-listrow"]:not(.children) .twisty {
  display: none;
}

tr[is="thread-listrow"] .twisty-icon {
  width: 12px;
  height: 12px;
  content: var(--icon-nav-down-sm);
  margin: 1px;
}

/* Spam column variations */

#junkStatusCol img {
  content: var(--icon-spam-sm);
}

.tree-view-row-spam button {
  color: inherit;
  opacity: 0.8;
}

.tree-view-row-spam img {
  content: var(--icon-spam);
  pointer-events: none;
  fill: color-mix(in srgb, currentColor 10%, transparent);
  stroke: color-mix(in srgb, currentColor 30%, transparent);
}

tr[data-properties~="junk"] .tree-view-row-spam img {
  fill: var(--thread-pane-spam-fill);
  stroke: var(--thread-pane-spam-stroke);
}

.tree-view-row-spam button:hover {
  opacity: 1;
  background-color: transparent;
  border-color: transparent;
}

.tree-view-row-spam button:hover:active {
  background-color: color-mix(in srgb, currentColor 20%, transparent);
  border-color: transparent;
  color: currentColor;
}

[is="tree-view-listbox"]:focus .selected .tree-view-row-spam button:hover {
  background-color: transparent;
  color: currentColor;
}

/* Delete column variations */
/* TODO: Handle delete button color variations for tagged messages */

/* Correspondent column variations */

#correspondentColButton,
.correspondentcol-column {
  text-indent: 18px;
}

.correspondentcol-column {
  background-repeat: no-repeat;
  background-position-x: 1px;
  background-position-y: center;
  -moz-context-properties: stroke, fill-opacity;
  stroke: currentColor;
  fill-opacity: 0.3;
}

.correspondentcol-column:dir(rtl) {
  background-position-x: right 1px;
}

tr[data-properties~="outgoing"] .correspondentcol-column {
  background-image: var(--icon-nav-forward);
}

tr[data-properties~="outgoing"] .correspondentcol-column:dir(rtl) {
  background-image: var(--icon-nav-back);
}

tr[data-properties~="outgoing"].selected .correspondentcol-column {
  fill-opacity: 0.6;
}
