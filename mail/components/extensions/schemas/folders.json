[
  {
    "namespace": "manifest",
    "types": [
      {
        "$extend": "OptionalPermission",
        "choices": [
          {
            "type": "string",
            "enum": ["accountsFolders"]
          }
        ]
      }
    ]
  },
  {
    "namespace": "folders",
    "permissions": ["accountsRead"],
    "types": [
      {
        "id": "MailFolder",
        "type": "object",
        "description": "An object describing a mail folder, as returned for example by the :ref:`folders.getParentFolders` or :ref:`folders.getSubFolders` methods, or part of a :ref:`accounts.MailAccount` object, which is returned for example by the :ref:`accounts.list` and :ref:`accounts.get` methods. The ``subFolders`` property is only included if requested.",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "The account this folder belongs to."
          },
          "name": {
            "type": "string",
            "optional": true,
            "description": "The human-friendly name of this folder."
          },
          "path": {
            "type": "string",
            "description": "Path to this folder in the account. Although paths look predictable, never guess a folder's path, as there are a number of reasons why it may not be what you think it is. Use :ref:`folders.getParentFolders` or :ref:`folders.getSubFolders` to obtain hierarchy information."
          },
          "subFolders": {
            "type": "array",
            "description": "Subfolders are only included if requested. They will be returned in the same order as used in Thunderbird's folder pane.",
            "items": {
              "$ref": "folders.MailFolder"
            },
            "optional": true
          },
          "type": {
            "choices": [
              {
                "max_manifest_version": 2,
                "$ref": "folders.MailFolderType"
              },
              {
                "min_manifest_version": 3,
                "type": "array",
                "items": {
                  "$ref": "folders.MailFolderType"
                }
              }
            ],
            "optional": true,
            "description": "The type of folder."
          }
        }
      },
      {
        "id": "MailFolderInfo",
        "type": "object",
        "description": "An object containing additional information about a mail folder.",
        "properties": {
          "canAddMessages": {
            "type": "boolean",
            "optional": true,
            "description": "Whether this folder supports adding new messages."
          },
          "canAddSubfolders": {
            "type": "boolean",
            "optional": true,
            "description": "Whether this folder supports adding new subfolders."
          },
          "canBeDeleted": {
            "type": "boolean",
            "optional": true,
            "description": "Whether this folder can be deleted."
          },
          "canBeRenamed": {
            "type": "boolean",
            "optional": true,
            "description": "Whether this folder can be renamed."
          },
          "canDeleteMessages": {
            "type": "boolean",
            "optional": true,
            "description": "Whether this folder supports deleting messages."
          },
          "favorite": {
            "type": "boolean",
            "optional": true,
            "description": "Whether this folder is a favorite folder."
          },
          "lastUsed": {
            "$ref": "extensionTypes.Date",
            "optional": true,
            "description": "Date the folder was last used (precision: seconds)."
          },
          "quota": {
            "type": "array",
            "items": {
              "$ref": "MailFolderQuota"
            },
            "optional": true,
            "description": "Quota information, if available."
          },
          "newMessageCount": {
            "type": "integer",
            "optional": true,
            "description": "Number of new messages in this folder."
          },
          "totalMessageCount": {
            "type": "integer",
            "optional": true,
            "description": "Number of messages in this folder."
          },
          "unreadMessageCount": {
            "type": "integer",
            "optional": true,
            "description": "Number of unread messages in this folder."
          }
        }
      },
      {
        "id": "MailFolderType",
        "type": "string",
        "description": "The type of folder",
        "enum": [
          "inbox",
          "drafts",
          "sent",
          "trash",
          "templates",
          "archives",
          "junk",
          "outbox"
        ]
      },
      {
        "id": "MailFolderQuota",
        "type": "object",
        "description": "An object containing quota information.",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["STORAGE", "MESSAGE"],
            "description": "The type of the quota as defined by RFC2087. A <value>STORAGE</value> quota is constraining the available storage in bytes, a <value>MESSAGE</value> quota is constraining the number of storable messages."
          },
          "limit": {
            "type": "integer",
            "description": "The maximum available quota."
          },
          "used": {
            "type": "integer",
            "description": "The currently used quota."
          },
          "unused": {
            "type": "integer",
            "description": "The currently unused quota."
          }
        }
      },
      {
        "id": "QueryRange",
        "type": "object",
        "description": "An object defining a range.",
        "properties": {
          "min": {
            "type": "integer",
            "optional": true,
            "description": "The minimum value required to match the query."
          },
          "max": {
            "type": "integer",
            "optional": true,
            "description": "The maximum value required to match the query."
          }
        }
      }
    ],
    "functions": [
      {
        "name": "query",
        "type": "function",
        "description": "Gets folders that match the specified properties, or all folders if no properties are specified.",
        "async": "callback",
        "parameters": [
          {
            "type": "object",
            "name": "queryInfo",
            "optional": true,
            "default": {},
            "properties": {
              "canAddMessages": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder supports adding new messages, or not."
              },
              "canAddSubfolders": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder supports adding new subfolders, or not."
              },
              "canBeDeleted": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder can be deleted, or not."
              },
              "canBeRenamed": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder can be renamed, or not."
              },
              "canDeleteMessages": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder supports deleting messages, or not."
              },
              "favorite": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder is a favorite folder, or not."
              },
              "hasMessages": {
                "choices": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "QueryRange"
                  }
                ],
                "optional": true,
                "description": "Whether the folder (excluding subfolders) contains messages, or not. Supports to specify a :ref:`folders.QueryRange` (min/max) instead of a simple boolean value (none/some)."
              },
              "hasUnreadMessages": {
                "choices": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "QueryRange"
                  }
                ],
                "optional": true,
                "description": "Whether the folder (excluding subfolders) contains unread messages, or not. Supports to specify a :ref:`folders.QueryRange` (min/max) instead of a simple boolean value (none/some)."
              },
              "hasNewMessages": {
                "choices": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "QueryRange"
                  }
                ],
                "optional": true,
                "description": "Whether the folder (excluding subfolders) contains new messages, or not. Supports to specify a :ref:`folders.QueryRange` (min/max) instead of a simple boolean value (none/some)."
              },
              "hasSubFolders": {
                "choices": [
                  {
                    "type": "boolean"
                  },
                  {
                    "$ref": "QueryRange"
                  }
                ],
                "optional": true,
                "description": "Whether the folder has subfolders, or not. Supports to specify a :ref:`folders.QueryRange` (min/max) instead of a simple boolean value (none/some)."
              },
              "mostRecent": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder (excluding subfolders) has been used within the last month. The returned folders will be sorted by their recentness and limited to the most recent ones, which is controlled by the <value>mail.folder_widget.max_recent</value> preference. A value of <value>false</value> is ignored."
              },
              "name": {
                "choices": [
                  {
                    "type": "object",
                    "properties": {
                      "regexp": {
                        "type": "string",
                        "description": "A regular expression, for example <value>^Projects \\d{4}$</value>"
                      },
                      "flags": {
                        "type": "string",
                        "enum": ["i", "u", "v"],
                        "description": "RegExp Flags: <value>i</value> = case insensitive, <value>u</value> & <value>v</value> = unicode support",
                        "optional": true
                      }
                    }
                  },
                  {
                    "type": "string"
                  }
                ],
                "optional": true,
                "description": "Return only folders whose name is matched by the provided string or regular expression."
              },
              "parent": {
                "choices": [
                  {
                    "$ref": "folders.MailFolder"
                  },
                  {
                    "$ref": "accounts.MailAccount"
                  }
                ],
                "optional": true,
                "description": "Limits the search to the specified parent folder or account."
              },
              "recent": {
                "type": "boolean",
                "optional": true,
                "description": "Whether the folder (excluding subfolders) has been used within the last month, or not. The returned folders will be sorted by their recentness. Ignored if <value>mostRecent</value> is specified."
              },
              "type": {
                "choices": [
                  {
                    "$ref": "folders.MailFolderType"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "folders.MailFolderType"
                    }
                  }
                ],
                "optional": true,
                "description": "Match only folders of the specified type or types."
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "folders.MailFolder"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "create",
        "type": "function",
        "permissions": ["accountsFolders"],
        "description": "Creates a new subfolder in the specified folder or at the root of the specified account.",
        "async": "callback",
        "parameters": [
          {
            "name": "parent",
            "choices": [
              {
                "$ref": "folders.MailFolder"
              },
              {
                "$ref": "accounts.MailAccount"
              }
            ]
          },
          {
            "name": "childName",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "$ref": "folders.MailFolder"
              }
            ]
          }
        ]
      },
      {
        "name": "rename",
        "type": "function",
        "permissions": ["accountsFolders"],
        "description": "Renames a folder.",
        "async": "callback",
        "parameters": [
          {
            "name": "folder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "newName",
            "type": "string"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "$ref": "folders.MailFolder"
              }
            ]
          }
        ]
      },
      {
        "name": "move",
        "type": "function",
        "permissions": ["accountsFolders"],
        "description": "Moves the given ``sourceFolder`` into the given ``destination``. Throws if the destination already contains a folder with the name of the source folder.",
        "async": "callback",
        "parameters": [
          {
            "name": "sourceFolder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "destination",
            "choices": [
              {
                "$ref": "folders.MailFolder"
              },
              {
                "$ref": "accounts.MailAccount"
              }
            ]
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "$ref": "folders.MailFolder"
              }
            ]
          }
        ]
      },
      {
        "name": "copy",
        "type": "function",
        "permissions": ["accountsFolders"],
        "description": "Copies the given ``sourceFolder`` into the given ``destination``. Throws if the destination already contains a folder with the name of the source folder.",
        "async": "callback",
        "parameters": [
          {
            "name": "sourceFolder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "destination",
            "choices": [
              {
                "$ref": "folders.MailFolder"
              },
              {
                "$ref": "accounts.MailAccount"
              }
            ]
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "$ref": "folders.MailFolder"
              }
            ]
          }
        ]
      },
      {
        "name": "delete",
        "permissions": ["accountsFolders", "messagesDelete"],
        "type": "function",
        "description": "Deletes a folder.",
        "async": true,
        "parameters": [
          {
            "name": "folder",
            "$ref": "folders.MailFolder"
          }
        ]
      },
      {
        "name": "update",
        "permissions": ["accountsFolders"],
        "type": "function",
        "description": "Updates properties of a folder.",
        "async": true,
        "parameters": [
          {
            "name": "folder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "updateProperties",
            "type": "object",
            "description": "The properties to update.",
            "properties": {
              "favorite": {
                "type": "boolean",
                "optional": true,
                "description": "Sets or clears the favorite status."
              }
            }
          }
        ]
      },
      {
        "name": "getFolderInfo",
        "type": "function",
        "description": "Get additional information about a mail folder.",
        "async": "callback",
        "parameters": [
          {
            "name": "folder",
            "$ref": "folders.MailFolder"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "$ref": "folders.MailFolderInfo"
              }
            ]
          }
        ]
      },
      {
        "name": "getParentFolders",
        "type": "function",
        "description": "Get all parent folders as a flat ordered array. The first array entry is the direct parent.",
        "async": "callback",
        "parameters": [
          {
            "name": "folder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "includeSubFolders",
            "description": "Specifies whether the returned :ref:`folders.MailFolder` object for each parent folder should include its nested subfolders . Defaults to <value>false</value>.",
            "optional": true,
            "default": false,
            "type": "boolean"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "folders.MailFolder"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "getSubFolders",
        "type": "function",
        "description": "Get the subfolders of the specified folder or account.",
        "async": "callback",
        "parameters": [
          {
            "name": "folderOrAccount",
            "choices": [
              {
                "$ref": "folders.MailFolder"
              },
              {
                "$ref": "accounts.MailAccount"
              }
            ]
          },
          {
            "name": "includeSubFolders",
            "description": "Specifies whether the returned :ref:`folders.MailFolder` object for each direct subfolder should also include all its nested subfolders . Defaults to <value>true</value>.",
            "optional": true,
            "default": true,
            "type": "boolean"
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "folders.MailFolder"
                }
              }
            ]
          }
        ]
      },
      {
        "name": "markAsRead",
        "permissions": ["accountsFolders"],
        "type": "function",
        "description": "Marks all messages in a folder as read.",
        "async": false,
        "parameters": [
          {
            "name": "folder",
            "$ref": "folders.MailFolder"
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onCreated",
        "type": "function",
        "description": "Fired when a folder has been created.",
        "parameters": [
          {
            "name": "createdFolder",
            "$ref": "folders.MailFolder"
          }
        ]
      },
      {
        "name": "onRenamed",
        "type": "function",
        "description": "Fired when a folder has been renamed.",
        "parameters": [
          {
            "name": "originalFolder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "renamedFolder",
            "$ref": "folders.MailFolder"
          }
        ]
      },
      {
        "name": "onMoved",
        "type": "function",
        "description": "Fired when a folder has been moved.",
        "parameters": [
          {
            "name": "originalFolder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "movedFolder",
            "$ref": "folders.MailFolder"
          }
        ]
      },
      {
        "name": "onCopied",
        "type": "function",
        "description": "Fired when a folder has been copied.",
        "parameters": [
          {
            "name": "originalFolder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "copiedFolder",
            "$ref": "folders.MailFolder"
          }
        ]
      },
      {
        "name": "onDeleted",
        "type": "function",
        "description": "Fired when a folder has been deleted.",
        "parameters": [
          {
            "name": "deletedFolder",
            "$ref": "folders.MailFolder"
          }
        ]
      },
      {
        "name": "onFolderInfoChanged",
        "type": "function",
        "description": "Fired when certain information of a folder have changed. Bursts of message count changes are collapsed to a single event.",
        "parameters": [
          {
            "name": "folder",
            "$ref": "folders.MailFolder"
          },
          {
            "name": "folderInfo",
            "$ref": "folders.MailFolderInfo"
          }
        ]
      }
    ]
  }
]
