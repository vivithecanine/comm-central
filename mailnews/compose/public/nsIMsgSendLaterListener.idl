/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Mark Banner <bugzilla@standard8.plus.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

/**
 * Implement this interface and add to nsIMsgSendLater to receive notifications
 * of send later actions.
 */
[scriptable, uuid(bb9fb203-d615-42d2-962b-447c8326bf79)]
interface nsIMsgSendLaterListener : nsISupports {
  /**
   * Notify the observer that the operation of sending unsent messages has
   * started.
   *
   * @param aTotalMessageCount  Number of messages to be sent.
   */
  void onStartSending(in unsigned long aTotalMessageCount);

  /**
   * Notify the observer that progress as occurred for send operation.
   *
   * @param aTotalSent      The number of messages currently sent.
   * @param aTotalMessages  The total number of messages to be sent.
   */
  void onProgress(in unsigned long aCurrentMessage,
                  in unsigned long aTotalMessages);

  /**
   * Notify the observer that the send unsent messages operation has finished.
   * This is called regardless of the success/failure of the operation.
   *
   * @param aStatus     Status code for the message send.
   * @param aMsg        A text string describing the error.
   * @param aTotalTried Total number of messages that were attempted to be sent.
   * @param aSuccessful How many messages were successfully sent.
   */
  void onStopSending(in nsresult aStatus, in wstring aMsg,
                     in unsigned long aTotalTried, in unsigned long aSuccessful);
};

